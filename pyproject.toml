[tool.poetry]
name = "src"
version = "0.1.0"
description = "MLOps zoomcamp - Cohort 2023"
authors = ["Marcello Victorino <marcello.victorino@cinch.co.uk>"]

[tool.poetry.dependencies]
python = "^3.8"
# aws-lambda-powertools = "^1.25.1" # required in Lambda runtime
openpyxl = "^3.1.2"
xlsxwriter = "^3.0.9"
pandas = "^2.0.0"
urllib3 = "~1.26.15"
notebook = "^6.5.4"
pyarrow = "^11.0.0"
scikit-learn = "^1.2.2"
matplotlib = "^3.7.1"
seaborn = "^0.12.2"
altair = "^5.0.0"
mlflow = "^2.3.2"
optuna = "^3.1.1"

[tool.poetry.dev-dependencies]
# Set AWS specific packages as dev-dependency so it doesn't get packaged
# mypy = "^0.931"
# pytest = "^7.0.0"
# pytest-cov = "^3.0.0"
black = "^22.1.0"
isort = "^5.10.1"
flake8 = "^4.0.1"
pre-commit = "^2.17.0"
# boto3 = "^1.21.6"
# moto = "^3.0.5"
# freezegun = "^1.2.1"

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

# Configurations for mypy
[tool.mypy]
exclude = [".venv", "tests", "src/infrastructure_cdk"]
strict = true
ignore_missing_imports = true
implicit_reexport = true
check_untyped_defs = true
no_implicit_optional = true
allow_untyped_calls = true

# Configurations for Coverage
[tool.coverage.run]
branch = true
source = ["src/"]
omit = ["tests/*", "**/__init__.py", "src/handler.py"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc.)?abstractmethod"
]

ignore_errors = true
fail_under = 90

[tool.coverage.html]
directory = "coverage_html_report"